// Mocks generated by Mockito 5.4.6 from annotations
// in byui_rideshare/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:byui_rideshare/models/chat_message.dart' as _i4;
import 'package:byui_rideshare/services/chat_service.dart' as _i2;
import 'package:byui_rideshare/services/user_service_interface.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatService extends _i1.Mock implements _i2.ChatService {
  MockChatService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> sendMessage({
    required String? rideId,
    required _i4.ChatMessage? message,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [], {
              #rideId: rideId,
              #message: message,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.ChatMessage>> getMessages(String? rideId) =>
      (super.noSuchMethod(
            Invocation.method(#getMessages, [rideId]),
            returnValue: _i3.Stream<List<_i4.ChatMessage>>.empty(),
          )
          as _i3.Stream<List<_i4.ChatMessage>>);
}

/// A class which mocks [IUserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserService extends _i1.Mock implements _i5.IUserService {
  MockIUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String?> getUserName(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#getUserName, [uid]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);
}
